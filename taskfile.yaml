version: "3"

tasks:
  build:
    cmds:
      - rm -rf ./bin
      - mkdir -p ./bin/sources
      - mkdir -p ./bin/runners
      - mkdir -p ./bin/targets
      - go build -buildmode=plugin -o ./bin/runners/es5runner.so ./src/runners/es5runner
      - go build -buildmode=plugin -o ./bin/runners/wasmrunner.so ./src/runners/wasmrunner
      - go build -buildmode=plugin -o ./bin/runners/gptrunner.so ./src/runners/gptrunner
      - go build -buildmode=plugin -o ./bin/runners/jlorunner.so ./src/runners/jlorunner
      - go build -buildmode=plugin -o ./bin/sources/httpsource.so ./src/sources/httpsource
      - go build -buildmode=plugin -o ./bin/sources/coapsource.so ./src/sources/coapsource
      - go build -buildmode=plugin -o ./bin/sources/natssource.so ./src/sources/natssource
      - go build -buildmode=plugin -o ./bin/sources/mqttsource.so ./src/sources/mqttsource
      - go build -buildmode=plugin -o ./bin/sources/pgsqlsource.so ./src/sources/pgsqlsource
      - go build -buildmode=plugin -o ./bin/targets/httptarget.so ./src/targets/httptarget
      - go build -buildmode=plugin -o ./bin/targets/coaptarget.so ./src/targets/coaptarget
      - go build -buildmode=plugin -o ./bin/targets/mqtttarget.so ./src/targets/mqtttarget
      - go build -o ./bin/events-bridge ./src

  test-coap:
    cmds:
      - viddy go run ./coapclient 'localhost:5683' '/event' '{"test":123}'

  test-http:
    cmds:
      - 'viddy curl -X POST -H ''Content-Type: application/json'' -d ''{"test":123}'' ''http://localhost:8080/event'''

  test-nats:
    cmds:
      - viddy nats pub event.subject '{"test":123}' --server nats://localhost:4222

  gen-plugin-proto:
    dir: ./src/plugin/proto
    cmds:
      - protoc --proto_path=. --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative ./plugin.proto

  build-testers:
    dir: ./testers
    cmds:
      - mkdir -p ./bin
      - go build -o ./bin/concurrently ./concurrently
      - go build -o ./bin/natssource ./sources/natssource
      - go build -o ./bin/coapsource ./sources/coapsource
      - go build -o ./bin/pgsqlsource ./sources/pgsqlsource
      - go build -o ./bin/mqttsource ./sources/mqttsource
      - go build -o ./bin/httpsource ./sources/httpsource
      - go build -o ./bin/coaptarget ./targets/coaptarget
      - go build -o ./bin/httptarget ./targets/httptarget
      - go build -o ./bin/plugin ./plugins/plugin
      - tinygo build -o ./bin/wasmrunner.wasm -target=wasi ./runners/wasmrunner

  run-plugin-config:
    env:
      CONFIG_FILE_PATH: ./testers/config/plugin.config.yaml
    cmds:
      - go run ./src

  run-phpcli-config:
    env:
      CONFIG_FILE_PATH: ./testers/config/phpcli.config.yaml
    cmds:
      - ./bin/events-bridge

  run-wasmrunner-config:
    env:
      CONFIG_FILE_PATH: ./testers/config/wasmrunner.config.yaml
    cmds:
      - ./bin/events-bridge

  run-mqtt-to-http:
    cmds:
      - cat ./testers/config/concurrently/mqtt-to-http.yaml | ./testers/bin/concurrently

  run-pgsql-to-http:
    cmds:
      - cat ./testers/config/concurrently/pgsql-to-http.yaml | ./testers/bin/concurrently

  run-nats-to-http:
    cmds:
      - cat ./testers/config/concurrently/nats-to-http.yaml | ./testers/bin/concurrently

  run-gptrunner-config:
    cmds:
      - cat ./testers/config/concurrently/gptrunner.yaml | ./testers/bin/concurrently
